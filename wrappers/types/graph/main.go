// Code generated by lib-go/goflow DO NOT EDIT.

//go:build !codeanalysis
// +build !codeanalysis

package main

import (
	"fmt"

	"context"
)

func assert(b bool) {
	if !b {
		panic("assertion failed")
	}
}

func main() {
	var g Types

	g = NewTypes()

	add, add10, forwardedInputs := g.Run(context.Background(), 1, []uint{2, 3}, 4, false)
	if add != 28 {
		panic("add should be 28")
	}
	if add10 != 11 {
		panic("add10 should be 11")
	}
	if fmt.Sprint(forwardedInputs) != "[1 2 3 4]" {
		panic(fmt.Sprintf("forwardedInputs should be [1 2 3 4], got %v", forwardedInputs))
	}

	fmt.Println("Test done.")

	fmt.Println("All tests done.")
}
